services:
  vote:
    image: donaemeka/vote:latest
    depends_on:
      redis:
        condition: service_healthy 
    ports:
      - "8080:80"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    networks:
      - front-tier
      - back-tier

  result:
    image: donaemeka/result:latest
    depends_on:
      db:
        condition: service_healthy 
    ports:
      - "8081:80"
    environment:
      DB_HOST: db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      DB_PORT: 5432
    networks:
      - front-tier
      - back-tier

  worker:
    image: donaemeka/worker:latest
    depends_on:
      redis:
        condition: service_healthy 
      db:
        condition: service_healthy 
    environment:
      DB_HOST: db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      DB_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
    networks:
      - back-tier

  redis:
    image: redis:alpine
    volumes:
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: /healthchecks/redis.sh
      interval: "5s"
    networks:
      - back-tier

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: /healthchecks/postgres.sh
      interval: "5s"
    networks:
      - back-tier

volumes:
  db-data:

networks:
  front-tier:
  back-tier: